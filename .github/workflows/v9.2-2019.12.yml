# @see https://github.com/actions/upload-release-asset
name: Release and Upload Assets for 9.2-2019.12

on:
  push:
    branch:
    - 'main'

env:
  TAG: 9.2-2019.12
  AARCH32: gcc-arm-9.2-2019.12-x86_64-arm-none-linux-gnueabihf.tar.xz
  AARCH64: gcc-arm-9.2-2019.12-x86_64-aarch64-none-linux-gnu.tar.xz

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    # @see https://ryangjchandler.co.uk/articles/running-github-actions-for-certain-commit-messages
    if: "startsWith(${{ github.event.head_commit.message }},'feature(9.2-2019.12)')"
    steps:
      - uses: actions/checkout@v2
      - name: Download from binrel
        env:
          REPO: https://developer.arm.com/-/media/Files/downloads/gnu-a
        run: |
          curl -LO $REPO/$TAG/binrel/$AARCH32 &&
          curl -LO $REPO/$TAG/binrel/$AARCH64
#      - name: Create Release
#        id: create_release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{ env.TAG }}-${{ steps.parse_committed_at.outputs.committedAt }}
#          release_name: Release ${{ env.TAG }}-${{ steps.parse_committed_at.outputs.committedAt }}
#          draft: false
#          prerelease: false
      # release should has been created before
      - name: Run octocat
        env:
          TAG: ${{ env.TAG }}
        id: octocat
        run: bash scripts/octocat.sh
      - name: Install Github CLI
        run: |
          curl -L https://hub.fastgit.org/cli/cli/releases/download/v${tag}/gh_${tag}_linux_amd64.tar.gz |\
          tar -zxv &&\
          sudo cp gh_${tag}_linux_amd64/bin/gh /usr/bin/ &&\
          gh --version &&\
          gh config set prompt disabled
        env:
          tag: 1.6.2
      - name: Upload ${{ env.AARCH32 }}
        run: gh release upload $TAG $FILES --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ env.TAG }}
          FILES: ${{ env.AARCH32 }} ${{ env.AARCH64 }}
#      - name: Upload ${{ env.AARCH64 }}
#        run: gh release upload $TAG $ASSET --clobber
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          TAG: ${{ env.TAG }}
#          ASSET: ${{ env.AARCH32 }}
#        with:
#          upload_url: ${{ steps.octocat.outputs.upload_url }}
#          asset_path: ./${{ env.AARCH64 }}
#          asset_name: ${{ env.AARCH64 }}
#          # https://en.wikipedia.org/wiki/List_of_archive_formats
#          asset_content_type: application/x-gtar
